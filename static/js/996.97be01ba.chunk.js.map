{"version":3,"file":"static/js/996.97be01ba.chunk.js","mappings":"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","sources":["helpers/transactionsFormatter.js","webpack://react-homework-template/./src/components/TransactionList/TransactionList.module.css?a859","webpack://react-homework-template/./src/components/TransactionItem/TransactionItem.module.css?cf5d","components/TransactionItem/TransactionItem.jsx","components/TransactionList/TransactionList.jsx","webpack://react-homework-template/./src/components/AddButton/AddButton.module.css?e67f","components/AddButton/AddButton.jsx","components/Home/Home.jsx"],"sourcesContent":["export function getFormattedTransactions(transactions, categories) {\n  return transactions\n    .map(transaction => getFormattedTransaction(transaction, categories))\n    .toSorted((a, b) => b.date.localeCompare(a.date));\n}\nfunction getFormattedTransaction(transaction, categories) {\n  const {\n    transactionDate: date,\n    amount: sum,\n    categoryId,\n    type,\n    comment,\n    id,\n  } = transaction;\n  const newTransaction = {\n    id,\n    date,\n    type: type === 'EXPENSE' ? '-' : '+',\n    category: getCategoryName(categoryId, categories),\n    comment,\n    sum: Math.abs(sum),\n  };\n  return newTransaction;\n}\n\nfunction getCategoryName(id, categories) {\n  const cat = [...categories].find(item => item.id === id);\n  return cat?.name || 'Invalid';\n}\n\nexport function getHeadTransaction() {\n  return ['date', 'type', 'category', 'comment', 'sum'];\n}\n\nexport function getStyleByType(type) {\n  const currentColor =\n    type === '-' ? 'var(--red-color)' : 'var(--yellow-color)';\n  return {\n    color: currentColor,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TransactionList_list__VBbwk\",\"head_row\":\"TransactionList_head_row__5O9jX\",\"container\":\"TransactionList_container__+v9ep\",\"text\":\"TransactionList_text__nLKXZ\",\"row_item\":\"TransactionList_row_item__OXdq9\"};","// extracted by mini-css-extract-plugin\nexport default {\"btn_write\":\"TransactionItem_btn_write__YuELW\",\"controls\":\"TransactionItem_controls__XyzX1\",\"row\":\"TransactionItem_row__JG4JI\",\"btn_edit\":\"TransactionItem_btn_edit__v7Gk7\",\"btn_delete\":\"TransactionItem_btn_delete__YGvDN\",\"edit\":\"TransactionItem_edit__XAGhr\",\"colored\":\"TransactionItem_colored__7Wc8-\",\"card\":\"TransactionItem_card__oNvEs\",\"row_item\":\"TransactionItem_row_item__iV78Q\"};","import clsx from 'clsx';\nimport { useDispatch } from 'react-redux';\n\nimport useMedia from '../../hooks/useMedia';\nimport { deleteTransactions } from '../../redux/Transactions/operations';\nimport { openEditModal, addEditId } from '../../redux/Modals/slice';\nimport { getStyleByType } from '../../helpers/transactionsFormatter';\n\nimport s from './TransactionItem.module.css';\nimport { Icon } from '../../icons';\nimport { getBalanceThunk } from '../../redux/Auth/operations';\n\nfunction TransactionItem({ transaction, id }) {\n  const dispatch = useDispatch();\n  const { isMobile } = useMedia();\n  const idForModal = id;\n  const style = getStyleByType(transaction.type);\n\n  function onEdit() {\n    const newId = idForModal;\n    dispatch(addEditId(newId));\n    dispatch(openEditModal());\n  }\n\n  async function OnDelete() {\n    await dispatch(deleteTransactions(id));\n    dispatch(getBalanceThunk());\n  }\n\n  return isMobile ? (\n    <ul className={s.card} style={style}>\n      {[...Object.keys(transaction)].map((tKey, idx) => {\n        return (\n          <li key={idx} className={s.row}>\n            <span className={s.row_item}>{tKey}</span>\n            <span className={s.row_item}>{transaction[tKey]}</span>\n          </li>\n        );\n      })}\n\n      <li className={s.row}>\n        <button\n          type=\"button\"\n          className={clsx(s.btn_edit, s.row_item)}\n          onClick={onEdit}\n        >\n          <Icon id=\"#icon-pen\" className={s.edit}></Icon>\n          <p className=\"s.btn_write\">Edit</p>\n        </button>\n        <button\n          type=\"button\"\n          className={clsx(s.colored, 'btn_delete')}\n          onClick={OnDelete}\n        >\n          Delete\n        </button>\n      </li>\n    </ul>\n  ) : (\n    <>\n      <ul className={s.row} style={style}>\n        {[...Object.values(transaction)].map((value, idx) => {\n          return (\n            <li key={idx} className={s.row_item}>\n              {value}\n            </li>\n          );\n        })}\n        <li className={clsx(s.row_item, s.controls)}>\n          <button type=\"button\" className={s.btn_edit} onClick={onEdit}>\n            <Icon id=\"#icon-pen\" className={s.edit}></Icon>\n          </button>\n          <button\n            type=\"button\"\n            className={clsx(s.colored, 'btn_delete')}\n            onClick={OnDelete}\n          >\n            Delete\n          </button>\n        </li>\n      </ul>\n    </>\n  );\n}\n\nexport default TransactionItem;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectTransError, selectTransLoading, selectTransactions } from '../../redux/Transactions/selectors';\nimport { selectCategories } from '../../redux/Statistics/selectors';\nimport { getFormattedTransactions, getHeadTransaction } from '../../helpers/transactionsFormatter';\n\nimport s from './TransactionList.module.css';\nimport Loader from '../Loader/Loader';\nimport TransactionItem from '../TransactionItem/TransactionItem';\nimport FormButton from '../common/FormButton/FormButton';\nimport { openAddModal } from '../../redux/Modals/slice';\nimport useMedia from '../../hooks/useMedia';\n\nfunction TransactionList() {\n    const reduxTransactions = useSelector(selectTransactions);\n    const isLoading = useSelector(selectTransLoading);\n    const isError = useSelector(selectTransError);\n    const categories = useSelector(selectCategories);\n\n    const { isMobile } = useMedia();\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            {isLoading && <Loader />}\n            {isError && <p className={s.text}>Oops, something went wrong...</p>}\n            {!isLoading && reduxTransactions.length === 0 ? (\n                <div className={s.container}>\n                    <p>No transactions available yet.</p> <p> Let&#39;s add your first transaction:</p>\n                    <FormButton type=\"button\" text={'Add transaction'} variant={'multiColorButton'} handlerFunction={() => dispatch(openAddModal())} />\n                </div>\n            ) : (\n                <>\n                    {!isMobile && (\n                        <ul className={s.head_row}>\n                            {getHeadTransaction().map((value, idx) => {\n                                return (\n                                    <li key={idx} className={s.row_item}>\n                                        {value}\n                                    </li>\n                                );\n                            })}\n                            <li className={s.row_item}></li>\n                        </ul>\n                    )}\n                    <ul className={s.list}>\n                        {getFormattedTransactions(reduxTransactions, categories).map(({ id, ...item }) => {\n                            return <TransactionItem key={id} id={id} transaction={item} />;\n                        })}\n                    </ul>\n                </>\n            )}\n        </>\n    );\n}\n\nexport default TransactionList;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"AddButton_btn__KYUYO\",\"icon\":\"AddButton_icon__8z04C\",\"wrap\":\"AddButton_wrap__UwDI4\"};","import { Icon } from '../../icons';\nimport s from './AddButton.module.css';\nimport { openAddModal } from '../../redux/Modals/slice';\nimport { useDispatch } from 'react-redux';\n\nconst AddButton = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.wrap}>\n      <button\n        className={s.btn}\n        type=\"button\"\n        onClick={() => {\n          dispatch(openAddModal());\n        }}\n      >\n        <Icon id=\"#icon-plus\" className={s.icon}></Icon>\n      </button>\n    </div>\n  );\n};\n\nexport default AddButton;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getTransactions } from '../../redux/Transactions/operations';\nimport { getTransactionsCategories } from '../../redux/Statistics/operations';\nimport TransactionList from '../TransactionList/TransactionList';\nimport AddButton from '../AddButton/AddButton';\n\nfunction Home() {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(getTransactions());\n        dispatch(getTransactionsCategories());\n    }, [dispatch]);\n    return (\n        <>\n            <TransactionList />\n            <AddButton></AddButton>\n        </>\n    );\n}\n\nexport default Home;\n"],"names":["getFormattedTransactions","transactions","categories","map","transaction","transactionDate","date","amount","sum","categoryId","type","comment","id","newTransaction","category","getCategoryName","Math","abs","getFormattedTransaction","toSorted","a","b","localeCompare","cat","find","item","name","_ref","dispatch","useDispatch","isMobile","useMedia","idForModal","style","color","onEdit","newId","addEditId","openEditModal","async","OnDelete","deleteTransactions","getBalanceThunk","_jsxs","className","s","children","Object","keys","tKey","idx","_jsx","clsx","onClick","Icon","_Fragment","values","value","reduxTransactions","useSelector","selectTransactions","isLoading","selectTransLoading","isError","selectTransError","selectCategories","Loader","length","_objectWithoutProperties","_excluded","TransactionItem","FormButton","text","variant","handlerFunction","openAddModal","AddButton","useEffect","getTransactions","getTransactionsCategories","TransactionList"],"sourceRoot":""}