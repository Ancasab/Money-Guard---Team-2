{"version":3,"file":"static/js/542.97677327.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ChartDoughnut/ChartDoughnut.module.css?438a","components/ChartDoughnut/ChartDoughnut.jsx","webpack://react-homework-template/./src/components/Statistics/Statistics.module.css?da74","components/Statistics/coloredCategoriesMap.js","webpack://react-homework-template/./src/components/Statistics/StatisticsTable.module.css?4b99","components/Statistics/StatisticsTable.jsx","components/StatisticsSelector/serviceSelect.js","webpack://react-homework-template/./src/components/StatisticsSelector/StatisticsSelector.module.css?b26d","components/StatisticsSelector/styleSelect.js","components/StatisticsSelector/StatisticsSelector.jsx","components/Statistics/Statistics.jsx","helpers/dateHelper.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"doughnut\":\"ChartDoughnut_doughnut__iMRnH\",\"balance\":\"ChartDoughnut_balance__xtIRh\"};","import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport s from './ChartDoughnut.module.css';\n// import { useSelector } from 'react-redux';\n// import { selectSummary } from '../../redux/Statistics/selectors';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst options = {\n  cutout: '75%',\n};\n\nconst ChartDoughnut = ({ data, expenseTotal, incomeTotal }) => {\n  // const total = useSelector(selectSummary);\n\n  const doughnutData = {\n    datasets: [\n      {\n        data: !data.length ? [0] : data.map(expense => expense.total),\n\n        backgroundColor: data.map(expense => expense.color),\n        borderColor: data.map(expense => expense.color),\n        borderWidth: 1,\n        borderJoinStyle: 'round',\n        borderAlign: 'inner',\n      },\n    ],\n  };\n\n  return (\n    <div className={s.doughnut}>\n      {(!expenseTotal && !incomeTotal && (\n        <div>\n          <p>Add some expenses and incomes to see the chart</p>\n          <p>Your balance is ₴ {Math.abs(expenseTotal).toFixed(2)} </p>\n        </div>\n      )) ||\n        (!expenseTotal && incomeTotal && (\n          <div>\n            <p>Add some expenses</p>\n            <p>Your income is ₴ {Math.abs(incomeTotal).toFixed(2)}</p>\n          </div>\n        )) || (\n          <div>\n            <div className={s.balance}>\n              ₴ {Math.abs(expenseTotal).toFixed(2)}\n            </div>\n            <Doughnut data={doughnutData} options={options} />\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default ChartDoughnut;\n","// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"Statistics_heading__AU4Kk\",\"container\":\"Statistics_container__bm40l\",\"column\":\"Statistics_column__8VeeN\"};","const coloredCategoriesMap = new Map([\n  ['Main expenses', '#FED057'],\n  ['Products', '#FFD8D0'],\n  ['Car', '#FD9498'],\n  ['Self care', '#C5BAFF'],\n  ['Child care', '#6E78E8'],\n  ['Household products', '#4A56E2'],\n  ['Education', '#81E1FF'],\n  ['Leisure', '#24CCA7'],\n  ['Entertainment', '#FAFAFA'],\n  ['Other expenses', '#00AD84'],\n]);\nexport default coloredCategoriesMap;\n","// extracted by mini-css-extract-plugin\nexport default {\"table_head\":\"StatisticsTable_table_head__jXhGC\",\"list_wrapper\":\"StatisticsTable_list_wrapper__y2M3s\",\"item_wrapper\":\"StatisticsTable_item_wrapper__cURfi\",\"first_column\":\"StatisticsTable_first_column__9bEEm\",\"list_ts\":\"StatisticsTable_list_ts__C6wCI\",\"span_indicator\":\"StatisticsTable_span_indicator__QRUxA\",\"table_bottom\":\"StatisticsTable_table_bottom__41RGo\",\"expense\":\"StatisticsTable_expense__bprwG\",\"income\":\"StatisticsTable_income__wOhlN\"};","import s from './StatisticsTable.module.css';\n\nconst StatisticsTable = ({ data, expenseTotal, incomeTotal }) => {\n  return (\n    <div>\n      <div className={s.table_head}>\n        <p>Category</p>\n        <p>Sum</p>\n      </div>\n      <div className={s.list_wrapper}>\n        <ul className={s.list_ts}>\n          {data.length\n            ? data.map((category, index) => (\n                <li key={index}>\n                  <div className={s.item_wrapper}>\n                    <p className={s.first_column}>\n                      <span\n                        className={s.span_indicator}\n                        style={{ backgroundColor: `${category.color}` }}\n                      ></span>\n                      {category.name}\n                    </p>\n\n                    <p>{Math.abs(category.total).toFixed(2)}</p>\n                  </div>\n                </li>\n              ))\n            : ''}\n        </ul>\n\n        <div className={s.table_bottom}>\n          <p>Expenses:</p>\n          <span className={s.expense}>{Math.abs(expenseTotal).toFixed(2)}</span>\n        </div>\n        <div className={s.table_bottom}>\n          <p>Income:</p>\n          <span className={s.income}>{Math.abs(incomeTotal).toFixed(2)}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StatisticsTable;\n","export const monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const optionsMonth = [\n  { value: '1', label: 'January' },\n  { value: '2', label: 'February' },\n  { value: '3', label: 'March' },\n  { value: '4', label: 'April' },\n  { value: '5', label: 'May' },\n  { value: '6', label: 'June' },\n  { value: '7', label: 'July' },\n  { value: '8', label: 'August' },\n  { value: '9', label: 'September' },\n  { value: '10', label: 'October' },\n  { value: '11', label: 'November' },\n  { value: '12', label: 'December' },\n];\nexport const optionsYear = [\n  { value: '2024', label: '2024' },\n  { value: '2023', label: '2023' },\n  { value: '2022', label: '2022' },\n  { value: '2021', label: '2021' },\n  { value: '2020', label: '2020' },\n  { value: '2019', label: '2019' },\n  { value: '2018', label: '2018' },\n  { value: '2017', label: '2017' },\n  { value: '2016', label: '2016' },\n];\n\nconst currentDate = new Date();\nexport const currentMonth = currentDate.getMonth() + 1;\nexport const currentYear = currentDate.getFullYear();\nexport const monthName = monthNames[currentDate.getMonth()];\n","// extracted by mini-css-extract-plugin\nexport default {\"select\":\"StatisticsSelector_select__pZDOU\",\"selectContainer\":\"StatisticsSelector_selectContainer__-539x\"};","export const styleSelect = {\n  option: provided => {\n    return {\n      ...provided,\n      background: 'transparent',\n      border: 'none',\n      outline: 'none',\n\n      fontSize: '18px',\n      fontWeight: '400',\n      color: 'var(--text-rgba)',\n      backgroundColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover': {\n        backgroundColor: 'var(--bg-form)',\n        color: 'var(--red-color)',\n        fontWeight: '400',\n      },\n      textAlign: 'left',\n    };\n  },\n  control: styles => ({\n    ...styles,\n\n    color: 'var(--white, #FBFBFB)',\n    fontFamily: 'Poppins',\n    fontSize: '16px',\n    fontStyle: 'normal',\n    fontWeight: '400',\n    lineHeight: ' normal',\n    border: '1px solid rgba(255, 255, 255, 0.4)',\n    borderRadius: '8px',\n    boxShadow: 'none',\n    backgroundColor: 'rgba(74, 86, 226, 0.10)',\n    cursor: 'pointer',\n  }),\n\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n\n    return {\n      ...provided,\n      opacity,\n      transition,\n      right: 5,\n      color: 'var(--text-color)',\n      padding: '8px 20px',\n    };\n  },\n\n  menu: (provided, state) => {\n    return {\n      ...provided,\n      background:\n        'linear-gradient(0deg,rgba(83, 61, 186, 1) 0%,rgba(80, 48, 154, 1) 36%,rgba(106, 70, 165, 1) 61%,rgba(133, 93, 175, 1) 100%)',\n      borderRadius: '8px',\n      blur: '5px',\n    };\n  },\n  menuList: base => ({\n    ...base,\n    '::-webkit-scrollbar': {\n      display: 'none',\n    },\n  }),\n\n  indicatorSeparator: () => ({}),\n\n  indicators: () => {\n    return {\n      cursor: 'pointer',\n    };\n  },\n\n  input: provided => {\n    return {\n      ...provided,\n      margin: '0px',\n      color: 'var(--text-color)',\n      padding: '12px 20px',\n\n      minWidth: '100%',\n    };\n  },\n};\n","import React, { useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Select from 'react-select';\n\nimport { selectIsLoggedIn } from '../../redux/Auth/selectors';\nimport { getTransactionsSummaryByPeriod } from '../../redux/Statistics/operations';\nimport {\n  monthName,\n  currentMonth,\n  currentYear,\n  optionsMonth,\n  optionsYear,\n} from './serviceSelect';\n\nimport CustomDropIndicator from '../CustomDropIndicator/CustomDropIndicator';\n\nimport style from './StatisticsSelector.module.css';\nimport { styleSelect } from './styleSelect';\n\nfunction StatisticsSelector() {\n  const dispatch = useDispatch();\n  const isAuth = useSelector(selectIsLoggedIn);\n\n  const [month, setMonth] = useState({ value: currentMonth, label: monthName });\n  const [year, setYear] = useState({ value: currentYear, label: currentYear });\n  const [monthOptions, setMonthOptions] = useState([]);\n\n  const handleMonthChange = selectedMonth => {\n    setMonth(selectedMonth);\n  };\n\n  const handleYearChange = selectedYear => {\n    setYear(selectedYear);\n  };\n\n  useEffect(() => {\n    if (isAuth) {\n      dispatch(\n        getTransactionsSummaryByPeriod({ month: month.value, year: year.value })\n      );\n    }\n  }, [dispatch, isAuth, month, year]);\n\n  const filteredYearOptions = optionsYear.filter(\n    option => option.value <= currentYear\n  );\n\n  useEffect(() => {\n    console.log('Year changed:', year);\n    const filteredOptions = optionsMonth.filter(option => {\n      if (Number(year.value) === currentYear) {\n        return option.value <= currentMonth;\n      } else {\n        return true;\n      }\n    });\n    console.log('Filtered options:', filteredOptions);\n    setMonthOptions(filteredOptions);\n  }, [year]);\n\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\n\n  const handleMenuOpen = () => {\n    setMenuIsOpen(true);\n  };\n\n  const handleMenuClose = () => {\n    setMenuIsOpen(false);\n  };\n\n  const [yearIsOpen, setYearIsOpen] = useState(false);\n\n  const handleYearOpen = () => {\n    setYearIsOpen(true);\n  };\n\n  const handleYearClose = () => {\n    setYearIsOpen(false);\n  };\n\n  return (\n    <div className={style.selectContainer}>\n      <Select\n        className={style.select}\n        styles={styleSelect}\n        options={monthOptions}\n        value={month}  // Obiect complet\n        onChange={handleMonthChange}\n        name=\"optionsMonth\"\n        id=\"month-select\"\n        placeholder={month.label}\n        isSearchable={false}\n        onMenuOpen={handleMenuOpen}\n        onMenuClose={handleMenuClose}\n        components={{\n          DropdownIndicator: () => {\n            return menuIsOpen ? (\n              <CustomDropIndicator up={true} />\n            ) : (\n              <CustomDropIndicator up={false} />\n            );\n          },\n        }}\n      />\n      <Select\n        className={style.select}\n        styles={styleSelect}\n        options={filteredYearOptions}\n        value={year}  // Obiect complet\n        onChange={handleYearChange}\n        name=\"optionYear\"\n        id=\"years-select\"\n        placeholder={year.label}\n        isSearchable={false}\n        onMenuOpen={handleYearOpen}\n        onMenuClose={handleYearClose}\n        components={{\n          DropdownIndicator: () => {\n            return yearIsOpen ? (\n              <CustomDropIndicator up={true} />\n            ) : (\n              <CustomDropIndicator up={false} />\n            );\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default StatisticsSelector;\n","import { useDispatch, useSelector } from 'react-redux';\nimport ChartDoughnut from '../ChartDoughnut/ChartDoughnut';\nimport s from './Statistics.module.css';\nimport { selectSummary } from '../../redux/Statistics/selectors';\nimport coloredCategoriesMap from './coloredCategoriesMap';\nimport StatisticsTable from './StatisticsTable';\nimport { useEffect } from 'react';\nimport { getTransactionsSummaryByPeriod } from '../../redux/Statistics/operations';\nimport { getCurrentMonthYear } from '../../helpers/dateHelper';\nimport StatisticsSelector from '../StatisticsSelector/StatisticsSelector';\n\nfunction Statistics() {\n  const transactions = useSelector(selectSummary);\n  const expense = transactions.categoriesSummary\n    ? transactions.categoriesSummary.filter(\n        transaction => transaction.type === 'EXPENSE'\n      )\n    : [];\n\n  const expenseTotal = transactions.expenseSummary;\n  const incomeTotal = transactions.incomeSummary;\n\n  const data = expense.map(item => ({\n    ...item,\n    color: coloredCategoriesMap.get(item.name),\n  }));\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getTransactionsSummaryByPeriod(getCurrentMonthYear()));\n  }, [dispatch]);\n  return (\n    <div className={s.container}>\n      <div className={s.column}>\n        <h2 className={s.heading}>Statistics</h2>\n        <ChartDoughnut\n          data={data}\n          expenseTotal={expenseTotal}\n          incomeTotal={incomeTotal}\n        />\n      </div>\n\n      <div className={s.column}>\n        <StatisticsSelector />\n        <StatisticsTable\n          data={data}\n          expenseTotal={expenseTotal}\n          incomeTotal={incomeTotal}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Statistics;\n","export function getCurrentMonthYear() {\n    const currentDate = new Date();\n    const month = currentDate.getMonth() + 1; // Add 1 as months are zero-based\n    const year = currentDate.getFullYear();\n\n    return { month, year };\n}"],"names":["ChartJS","register","ArcElement","Tooltip","Legend","options","cutout","_ref","data","expenseTotal","incomeTotal","doughnutData","datasets","length","map","expense","total","backgroundColor","color","borderColor","borderWidth","borderJoinStyle","borderAlign","_jsx","className","s","children","_jsxs","Math","abs","toFixed","Doughnut","Map","category","index","style","concat","name","optionsMonth","value","label","optionsYear","currentDate","Date","currentMonth","getMonth","currentYear","getFullYear","monthName","styleSelect","option","provided","_objectSpread","background","border","outline","fontSize","fontWeight","cursor","textAlign","control","styles","fontFamily","fontStyle","lineHeight","borderRadius","boxShadow","singleValue","state","opacity","isDisabled","transition","right","padding","menu","blur","menuList","base","display","indicatorSeparator","indicators","input","margin","minWidth","dispatch","useDispatch","isAuth","useSelector","selectIsLoggedIn","month","setMonth","useState","year","setYear","monthOptions","setMonthOptions","useEffect","getTransactionsSummaryByPeriod","filteredYearOptions","filter","console","log","filteredOptions","Number","menuIsOpen","setMenuIsOpen","yearIsOpen","setYearIsOpen","Select","onChange","selectedMonth","id","placeholder","isSearchable","onMenuOpen","handleMenuOpen","onMenuClose","handleMenuClose","components","DropdownIndicator","CustomDropIndicator","up","selectedYear","handleYearOpen","handleYearClose","transactions","selectSummary","categoriesSummary","transaction","type","expenseSummary","incomeSummary","item","coloredCategoriesMap","get","getCurrentMonthYear","ChartDoughnut","StatisticsSelector","StatisticsTable"],"sourceRoot":""}